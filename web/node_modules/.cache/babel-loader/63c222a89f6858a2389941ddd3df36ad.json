{"ast":null,"code":"var _jsxFileName = \"/Users/mac/WebstormProjects/FormationHelper/formationhelper/src/Pages/Components/FormationCanvas.js\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Container, Paper, Grid } from '@material-ui/core';\nimport Dot from \"./Dot\";\nimport Typography from '@material-ui/core/Typography';\nimport Draggable from 'react-draggable';\n\nfunction createArr(num) {\n  let arr = [];\n\n  for (let i = 0; i < num; i++) arr.push(i);\n\n  return arr;\n}\n\nclass StageSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0\n    };\n  }\n\n  handleClick(offset) {\n    this.setState({\n      offset\n    });\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Stage\",\n      style: {\n        direction: \"column\",\n        justify: \"center\",\n        alignItems: \"center\",\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, createArr(this.props.dancer).map(index => React.createElement(Dot, {\n      name: 'dot' + index,\n      color: \"#000000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default function FormationCanvas(formationInfo) {\n  return React.createElement(\"div\", {\n    className: \"root\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: \"Canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Front\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Front\")), React.createElement(\"div\", {\n    className: \"LeftStage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Off Stage\")), React.createElement(StageSection, {\n    dancer: formationInfo.dancerNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"RightStage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Off Stage\")), React.createElement(\"div\", {\n    className: \"Back\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Back\"))));\n}","map":{"version":3,"sources":["/Users/mac/WebstormProjects/FormationHelper/formationhelper/src/Pages/Components/FormationCanvas.js"],"names":["React","Component","makeStyles","CssBaseline","Container","Paper","Grid","Dot","Typography","Draggable","createArr","num","arr","i","push","StageSection","constructor","props","state","offset","handleClick","setState","render","direction","justify","alignItems","position","dancer","map","index","FormationCanvas","formationInfo","dancerNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,KAAjC,EAAwCC,IAAxC,QAAoD,mBAApD;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAuB;AACnB,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,GAAnB,EAAwBE,CAAC,EAAzB,EAA6BD,GAAG,CAACE,IAAJ,CAASD,CAAT;;AAC7B,SAAOD,GAAP;AACH;;AAED,MAAMG,YAAN,SAA2Bd,SAA3B,CAAqC;AACjCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AACH;;AAEDC,EAAAA,WAAW,CAACD,MAAD,EAAS;AAChB,SAAKE,QAAL,CAAc;AAACF,MAAAA;AAAD,KAAd;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC,QAAX;AAAqBC,QAAAA,OAAO,EAAC,QAA7B;AAAuCC,QAAAA,UAAU,EAAE,QAAnD;AAA6DC,QAAAA,QAAQ,EAAE;AAAvE,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKhB,SAAS,CAAC,KAAKO,KAAL,CAAWU,MAAZ,CAAT,CAA6BC,GAA7B,CAAkCC,KAAD,IAC9B,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAI,QAAMA,KAAnB;AAA0B,MAAA,KAAK,EAAG,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAJL,CADJ,CADJ;AAYH;;AAvBgC;;AA2BrC,eAAe,SAASC,eAAT,CAAyBC,aAAzB,EAAuC;AAElD,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CALJ,EAUI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,aAAa,CAACC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAaI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAbJ,EAiBI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAjBJ,CADJ,CADJ;AAyBH","sourcesContent":["import React, {Component} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Container, Paper, Grid } from '@material-ui/core';\nimport Dot from \"./Dot\";\nimport Typography from '@material-ui/core/Typography';\nimport Draggable from 'react-draggable'\n\nfunction createArr(num){\n    let arr = [];\n    for(let i = 0; i < num; i++) arr.push(i);\n    return arr\n}\n\nclass StageSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { offset: 0 }\n    }\n\n    handleClick(offset) {\n        this.setState({offset})\n    }\n\n    render() {\n        return (\n            <Grid item xs={10}>\n                <div className=\"Stage\" style={{direction:\"column\", justify:\"center\", alignItems: \"center\", position: 'relative'}}>\n                    {/* TODO: Use Grid for now, but should be replaced with a canvas component that can specify the position*/}\n                    {/* Dot only works using div */}\n\n                    {createArr(this.props.dancer).map((index) =>\n                        <Dot name = {'dot'+index} color = \"#000000\" />\n                    )}\n                </div>\n            </Grid>\n        )\n    }\n}\n\n\nexport default function FormationCanvas(formationInfo){\n\n    return (\n        <div className=\"root\">\n            <Paper className=\"Canvas\" >\n                <div className=\"Front\" >\n                    <Typography>Front</Typography>\n                </div>\n\n                <div className=\"LeftStage\">\n                    <Typography>Off Stage</Typography>\n                </div>\n\n\n                <StageSection dancer={formationInfo.dancerNumber}/>\n\n\n                <div className=\"RightStage\">\n                    <Typography>Off Stage</Typography>\n                </div>\n\n                <div className = \"Back\" >\n                    <Typography>Back</Typography>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}