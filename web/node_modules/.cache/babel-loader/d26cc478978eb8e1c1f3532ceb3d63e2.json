{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _utilsStyleSvg = require('./utils/styleSvg');\n\nvar _utilsStyleSvg2 = _interopRequireDefault(_utilsStyleSvg);\n\nvar SVGComponent = function (_React$Component) {\n  _inherits(SVGComponent, _React$Component);\n\n  function SVGComponent() {\n    _classCallCheck(this, SVGComponent);\n\n    _get(Object.getPrototypeOf(SVGComponent.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(SVGComponent, [{\n    key: 'render',\n    value: function render() {\n      return _react2['default'].createElement('svg', this.props, this.props.children);\n    }\n  }]);\n\n  return SVGComponent;\n}(_react2['default'].Component);\n\nexports.SVGComponent = SVGComponent;\n\nvar Rectangle = function (_React$Component2) {\n  _inherits(Rectangle, _React$Component2);\n\n  function Rectangle() {\n    _classCallCheck(this, Rectangle);\n\n    _get(Object.getPrototypeOf(Rectangle.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Rectangle, [{\n    key: 'render',\n    value: function render() {\n      var strokeWidth = this.props.strokeWidth || 0;\n      var height = (this.props.height || 0) + 2 * strokeWidth;\n      var width = (this.props.width || 0) + 2 * strokeWidth;\n      var props = (0, _utilsStyleSvg2['default'])(_lodash2['default'].omit(this.props, 'style'), this.props);\n      return _react2['default'].createElement(SVGComponent, {\n        height: height,\n        width: width\n      }, _react2['default'].createElement('rect', _extends({}, props, {\n        x: strokeWidth / 2,\n        y: strokeWidth / 2\n      }), this.props.children));\n    }\n  }]);\n\n  return Rectangle;\n}(_react2['default'].Component);\n\nexports.Rectangle = Rectangle;\n\nvar Circle = function (_React$Component3) {\n  _inherits(Circle, _React$Component3);\n\n  function Circle() {\n    _classCallCheck(this, Circle);\n\n    _get(Object.getPrototypeOf(Circle.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Circle, [{\n    key: 'render',\n    value: function render() {\n      var strokeWidth = this.props.strokeWidth || 0;\n      var r = this.props.r || 0;\n      var height = r * 2 + 2 * strokeWidth;\n      var width = r * 2 + 2 * strokeWidth;\n      var cx = r + strokeWidth / 2;\n      var cy = r + strokeWidth / 2;\n      var props = (0, _utilsStyleSvg2['default'])(_lodash2['default'].omit(this.props, 'style'), this.props);\n      return _react2['default'].createElement(SVGComponent, {\n        height: height,\n        width: width\n      }, _react2['default'].createElement('circle', _extends({}, props, {\n        cx: cx,\n        cy: cy\n      }), this.props.children));\n    }\n  }]);\n\n  return Circle;\n}(_react2['default'].Component);\n\nexports.Circle = Circle;\n\nvar Ellipse = function (_React$Component4) {\n  _inherits(Ellipse, _React$Component4);\n\n  function Ellipse() {\n    _classCallCheck(this, Ellipse);\n\n    _get(Object.getPrototypeOf(Ellipse.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Ellipse, [{\n    key: 'render',\n    value: function render() {\n      var strokeWidth = this.props.strokeWidth || 0;\n      var rx = this.props.rx || 0;\n      var ry = this.props.ry || 0;\n      var height = ry * 2 + 2 * strokeWidth;\n      var width = rx * 2 + 2 * strokeWidth;\n      var cx = rx + strokeWidth / 2;\n      var cy = ry + strokeWidth / 2;\n      var props = (0, _utilsStyleSvg2['default'])(_lodash2['default'].omit(this.props, 'style'), this.props);\n      return _react2['default'].createElement(SVGComponent, {\n        height: height,\n        width: width\n      }, _react2['default'].createElement('ellipse', _extends({}, props, {\n        cx: cx,\n        cy: cy\n      }), this.props.children));\n    }\n  }]);\n\n  return Ellipse;\n}(_react2['default'].Component);\n\nexports.Ellipse = Ellipse;\n\nvar Line = function (_React$Component5) {\n  _inherits(Line, _React$Component5);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    _get(Object.getPrototypeOf(Line.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Line, [{\n    key: 'render',\n    value: function render() {\n      var strokeWidth = this.props.strokeWidth || 0;\n\n      var x = _lodash2['default'].max([this.props.x1, this.props.x2]);\n\n      var y = _lodash2['default'].max([this.props.y1, this.props.y2]);\n\n      var height = y + 2 * strokeWidth;\n      var width = x + 2 * strokeWidth;\n      var props = (0, _utilsStyleSvg2['default'])(_lodash2['default'].omit(this.props, 'style'), this.props);\n      return _react2['default'].createElement(SVGComponent, {\n        height: height,\n        width: width\n      }, _react2['default'].createElement('line', props, this.props.children));\n    }\n  }]);\n\n  return Line;\n}(_react2['default'].Component);\n\nexports.Line = Line;\n\nvar Polyline = function (_React$Component6) {\n  _inherits(Polyline, _React$Component6);\n\n  function Polyline() {\n    _classCallCheck(this, Polyline);\n\n    _get(Object.getPrototypeOf(Polyline.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Polyline, [{\n    key: 'render',\n    value: function render() {\n      var strokeWidth = this.props.strokeWidth || 0;\n\n      var points = _lodash2['default'].map(this.props.points.split(' '), function (point) {\n        var xy = point.split(',');\n        return {\n          x: parseInt(xy[0], 10),\n          y: parseInt(xy[1], 10)\n        };\n      });\n\n      var x = _lodash2['default'].max(_lodash2['default'].map(points, function (point) {\n        return point.x;\n      }));\n\n      var y = _lodash2['default'].max(_lodash2['default'].map(points, function (point) {\n        return point.y;\n      }));\n\n      var height = y + 2 * strokeWidth;\n      var width = x + 2 * strokeWidth;\n      var props = (0, _utilsStyleSvg2['default'])(_lodash2['default'].omit(this.props, 'style'), this.props);\n      return _react2['default'].createElement(SVGComponent, {\n        height: height,\n        width: width\n      }, _react2['default'].createElement('polyline', props, this.props.children));\n    }\n  }]);\n\n  return Polyline;\n}(_react2['default'].Component);\n\nexports.Polyline = Polyline;\n\nvar Triangle = function (_React$Component7) {\n  _inherits(Triangle, _React$Component7);\n\n  function Triangle() {\n    _classCallCheck(this, Triangle);\n\n    _get(Object.getPrototypeOf(Triangle.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Triangle, [{\n    key: 'render',\n    value: function render() {\n      var strokeWidth = this.props.strokeWidth || 0;\n      var height = this.props.height || 0;\n      var width = this.props.width || 0;\n      var innerHeight = height - strokeWidth / 2;\n      var innerWidth = width - strokeWidth / 2;\n      var points = ['0,' + innerHeight, innerWidth / 2 + ',0', innerWidth + ',' + innerHeight];\n      var props = (0, _utilsStyleSvg2['default'])(_lodash2['default'].omit(this.props, 'style'), this.props);\n      return _react2['default'].createElement(SVGComponent, {\n        height: height + strokeWidth,\n        width: width + strokeWidth\n      }, _react2['default'].createElement('polygon', _extends({\n        transform: 'translate(' + 3 * strokeWidth / 4 + ',' + 11 * strokeWidth / 10 + ')',\n        points: points.join(' ')\n      }, props), this.props.children));\n    }\n  }]);\n\n  return Triangle;\n}(_react2['default'].Component);\n\nexports.Triangle = Triangle;\n\nvar CornerLine = function (_React$Component8) {\n  _inherits(CornerLine, _React$Component8);\n\n  function CornerLine() {\n    _classCallCheck(this, CornerLine);\n\n    _get(Object.getPrototypeOf(CornerLine.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CornerLine, [{\n    key: 'render',\n    value: function render() {\n      var size = this.props.size || 150;\n      var cornerWidth = this.props.width || 50;\n      var strokeWidth = this.props.strokeWidth || 0; //var height = _.max([this.props.style.height, size]);\n      //var width = _.max([this.props.style.width, size]);\n\n      var max = size;\n      var min = 0;\n      var diff = max - cornerWidth;\n      var up = this.props.up ? true : false;\n      var point = up ? [[max, min], [min, max], [min, diff], [diff, min], [max, min]] : [[max, max], [min, min], [cornerWidth, min], [max, diff], [max, max]];\n\n      var points = _lodash2['default'].reduce(point, function (memo, num) {\n        return memo + \" \" + num[0] + \",\" + num[1];\n      }, \"\");\n\n      var text = this.props.text;\n      var x = this.props.x || max;\n      var y = this.props.y || max;\n      var rotate = up ? 315 : 45;\n      var transform = \"rotate(\" + rotate.toString() + \")\";\n      var props = (0, _utilsStyleSvg2['default'])(_lodash2['default'].omit(this.props, 'style'), this.props);\n      return _react2['default'].createElement(SVGComponent, {\n        height: size,\n        width: size\n      }, _react2['default'].createElement('polyline', _extends({\n        points: points\n      }, props)), _react2['default'].createElement('text', {\n        x: x,\n        y: y,\n        transform: transform\n      }, this.props.text));\n    }\n  }]);\n\n  return CornerLine;\n}(_react2['default'].Component);\n\nexports.CornerLine = CornerLine;\n\nvar CornerBox = function (_React$Component9) {\n  _inherits(CornerBox, _React$Component9);\n\n  function CornerBox() {\n    _classCallCheck(this, CornerBox);\n\n    _get(Object.getPrototypeOf(CornerBox.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CornerBox, [{\n    key: 'render',\n    value: function render() {\n      var type = this.props.orientation;\n      var up = type === 'topLeft' || type === 'bottomRight' ? true : false; //        var right = (type === 'topRight' || type == 'bottomRight')?true:false;\n\n      var size = this.props.size;\n      var cornerWidth = this.props.width;\n      if (type === 'bottomLeft' || type === 'bottomRight') cornerWidth = -1 * cornerWidth;\n      var offset = 20;\n      var x = offset;\n      var y = -1 * (cornerWidth / 2);\n\n      if (up) {\n        x = -1 * (cornerWidth / 2);\n        y = size - offset;\n      }\n\n      var text = this.props.text; //var props = styleSvg(_.omit(this.props, 'style'),this.props);\n\n      return _react2['default'].createElement(CornerLine, _extends({}, this.props, {\n        size: this.props.size,\n        width: cornerWidth,\n        text: this.props.text,\n        x: x,\n        y: y,\n        up: up\n      }));\n    }\n  }]);\n\n  return CornerBox;\n}(_react2['default'].Component);\n\nexports.CornerBox = CornerBox;\n\nvar Dimension = function (_React$Component10) {\n  _inherits(Dimension, _React$Component10);\n\n  function Dimension() {\n    _classCallCheck(this, Dimension);\n\n    _get(Object.getPrototypeOf(Dimension.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Dimension, [{\n    key: 'render',\n    value: function render() {\n      var strokeWidth = this.props.strokeWidth || 0;\n      var height = (this.props.height || 0) + 2 * strokeWidth;\n      var width = (this.props.width || 0) + 2 * strokeWidth; //var viewBox = [0,0,20,20].join(' ');\n      //var markerArrow = <marker viewBox={viewBox}  id=\"markerArrow\" markerWidth={5} markerHeight={5}\n      //                     orient=\"auto\">\n      //    <path d=\"M2,2 L2,11 L10,6 L2,2\" style={{fill: '#000000'}} />\n      //</marker>;\n      //var markerSquare = <marker viewBox={viewBox} id=\"markerSquare\" markerWidth={markerWidth} markerHeight={markerHeight}\n      //                          orient=\"auto\">\n      //    <rect x=\"0\" y=\"0\" width={markerWidth} height={markerHeight} style={{stroke: 'none', fill:'#000000'}}/>\n      //</marker>;\n\n      var l = [strokeWidth, this.props.height];\n      var x = [strokeWidth, strokeWidth];\n      var y = [this.props.width, strokeWidth];\n      var r = [this.props.width, this.props.height];\n      var d = \"M\" + l.join(',') + \" L\" + x.join(',') + \" L\" + y.join(', ') + \" L\" + r.join(', '); //console.log(d);\n\n      var props = (0, _utilsStyleSvg2['default'])(_lodash2['default'].omit(this.props, 'style'), this.props);\n      var style = {\n        strokeWidth: this.props.strokeWidth,\n        fill: 'none',\n        stroke: this.props.stroke\n      };\n      return _react2['default'].createElement(SVGComponent, {\n        height: height,\n        width: width\n      }, _react2['default'].createElement('path', _extends({}, props, {\n        style: style,\n        d: d\n      })));\n    }\n  }]);\n\n  return Dimension;\n}(_react2['default'].Component);\n\nexports.Dimension = Dimension;\nvar sharedFields = {\n  fill: {\n    type: 'colorPicker'\n  },\n  stroke: {\n    type: 'colorPicker'\n  },\n  strokeWidth: {\n    type: 'number'\n  }\n};\nvar sharedShapeMetaData = {\n  defaultColors: {\n    fill: {\n      color: '#2409ba'\n    },\n    stroke: {\n      color: '#E65243'\n    },\n    strokeWidth: 20\n  }\n};\nexports['default'] = {\n  SVGComponent: SVGComponent,\n  Rectangle: _lodash2['default'].extend(Rectangle, {\n    metaData: {\n      props: _lodash2['default'].extend({\n        width: 500,\n        height: 300\n      }, sharedShapeMetaData.defaultColors),\n      settings: {\n        fields: _lodash2['default'].extend({\n          width: {\n            type: 'number'\n          },\n          height: {\n            type: 'number'\n          }\n        }, sharedFields)\n      }\n    }\n  }),\n  Circle: _lodash2['default'].extend(Circle, {\n    metaData: {\n      props: _lodash2['default'].extend({\n        r: 200\n      }, sharedShapeMetaData.defaultColors),\n      settings: {\n        fields: _lodash2['default'].extend({\n          r: {\n            type: 'number'\n          }\n        }, sharedFields)\n      }\n    }\n  }),\n  Ellipse: _lodash2['default'].extend(Ellipse, {\n    metaData: {\n      props: _lodash2['default'].extend({\n        rx: 300,\n        ry: 100\n      }, sharedShapeMetaData.defaultColors),\n      settings: {\n        fields: _lodash2['default'].extend({\n          rx: {\n            type: 'number'\n          },\n          ry: {\n            type: 'number'\n          }\n        }, sharedFields)\n      }\n    }\n  }),\n  Line: _lodash2['default'].extend(Line, {\n    metaData: {\n      props: _lodash2['default'].omit(_lodash2['default'].extend({\n        x1: 25,\n        y1: 25,\n        x2: 350,\n        y2: 350\n      }, sharedShapeMetaData.defaultColors), 'fill'),\n      settings: {\n        fields: _lodash2['default'].extend({\n          x1: {\n            type: 'number'\n          },\n          y1: {\n            type: 'number'\n          },\n          x2: {\n            type: 'number'\n          },\n          y2: {\n            type: 'number'\n          }\n        }, sharedFields)\n      }\n    }\n  }),\n  Polyline: _lodash2['default'].extend(Polyline, {\n    metaData: {\n      props: _lodash2['default'].extend({\n        points: '25,25 25,350 500,350 500,500 305,250 20,15'\n      }, sharedShapeMetaData.defaultColors),\n      settings: {\n        fields: sharedFields\n      }\n    }\n  }),\n  Triangle: _lodash2['default'].extend(Triangle, {\n    metaData: {\n      props: _lodash2['default'].extend({\n        width: 200,\n        height: 200\n      }, sharedShapeMetaData.defaultColors),\n      settings: {\n        fields: _lodash2['default'].extend({\n          width: {\n            type: 'number'\n          },\n          height: {\n            type: 'number'\n          }\n        }, sharedFields)\n      }\n    }\n  }),\n  CornerBox: _lodash2['default'].extend(CornerBox, {\n    metaData: {\n      props: _lodash2['default'].extend({\n        size: 400,\n        width: 150,\n        text: 'type your text',\n        orientation: 'topLeft'\n      }, sharedShapeMetaData.defaultColors),\n      settings: {\n        fields: _lodash2['default'].extend({\n          width: {\n            type: 'number'\n          },\n          size: {\n            type: 'number'\n          },\n          orientation: {\n            type: 'select',\n            settings: {\n              options: ['topRight', 'topLeft', 'bottomRight', 'bottomLeft']\n            }\n          }\n        }, sharedFields)\n      }\n    }\n  }),\n  CornerLine: _lodash2['default'].extend(CornerLine, {\n    metaData: {\n      props: _lodash2['default'].extend({\n        size: 150,\n        width: 50,\n        text: 'type your text',\n        x: 25,\n        y: 25,\n        up: false\n      }, sharedShapeMetaData.defaultColors),\n      settings: {\n        fields: _lodash2['default'].extend({\n          width: {\n            type: 'number'\n          },\n          size: {\n            type: 'number'\n          },\n          x: {\n            type: 'number'\n          },\n          y: {\n            type: 'number'\n          },\n          up: {\n            type: 'boolean'\n          }\n        }, sharedFields)\n      }\n    }\n  }),\n  Dimension: _lodash2['default'].extend(Dimension, {\n    metaData: {\n      props: _lodash2['default'].omit(_lodash2['default'].extend({\n        width: 250,\n        height: 100\n      }, sharedShapeMetaData.defaultColors), 'fill'),\n      settings: {\n        fields: _lodash2['default'].extend({\n          width: {\n            type: 'number'\n          },\n          height: {\n            type: 'number'\n          }\n        }, sharedFields)\n      }\n    }\n  })\n};","map":null,"metadata":{},"sourceType":"script"}