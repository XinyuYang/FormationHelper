{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheny\\\\WebstormProjects\\\\FormationHelper\\\\formationhelper\\\\src\\\\Pages\\\\Components\\\\Dot.js\";\nimport React, { Component } from \"react\";\nimport { Circle } from \"react-shapes\";\nimport Draggable from 'react-draggable';\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogContentText } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n});\n\nclass Dot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dancerName: \"Dancer Name\",\n      dialogOpen: false\n    };\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClickOpen() {\n    this.setState({\n      dialogOpen: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      dialogOpen: false\n    });\n  }\n\n  onDancerNameChange(e) {\n    this.setState({\n      dancerName: e.target.value\n    });\n  }\n\n  render() {\n    const color = this.props.color; //currently not working\n\n    const name = this.props.name;\n    return React.createElement(Draggable, {\n      bounds: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onDoubleClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, name), React.createElement(Circle, {\n      r: 10,\n      fill: {\n        color: color\n      },\n      stroke: {\n        color: color\n      },\n      strokeWidth: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Dialog, {\n      open: this.state.dialogOpen,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"alert-dialog-slide-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Create New Formation\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      id: \"alert-dialog-slide-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"This is the dot's information\"), React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"name\",\n      label: \"Dance Name\",\n      type: \"dance name\",\n      value: this.state.danceName,\n      onChange: this.onDancerNameChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Dot;","map":{"version":3,"sources":["C:\\Users\\cheny\\WebstormProjects\\FormationHelper\\formationhelper\\src\\Pages\\Components\\Dot.js"],"names":["React","Component","Circle","Draggable","Slide","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","Transition","forwardRef","props","ref","Dot","constructor","state","dancerName","dialogOpen","handleClickOpen","bind","handleClose","setState","onDancerNameChange","e","target","value","render","color","name","danceName"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Circle} from \"react-shapes\";\r\nimport Draggable from 'react-draggable';\r\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogContentText} from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref){\r\n    return <Slide direction=\"up\" ref={ref} {...props}/>;\r\n});\r\n\r\nclass Dot extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dancerName : \"Dancer Name\",\r\n            dialogOpen: false\r\n        }\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    handleClickOpen(){\r\n        this.setState({dialogOpen:true});\r\n    }\r\n\r\n    handleClose(){\r\n        this.setState({dialogOpen:false});\r\n    }\r\n\r\n    onDancerNameChange(e){\r\n        this.setState({dancerName: e.target.value});\r\n    }\r\n\r\n    render(){\r\n        const color = this.props.color; //currently not working\r\n        const name = this.props.name;\r\n        return(\r\n            <Draggable bounds=\"parent\">\r\n                <div onDoubleClick={this.handleClickOpen}>\r\n                    <h4>{name}</h4>\r\n                    <Circle r={10} fill={{color:color}} stroke={{color:color}} strokeWidth={0}/>\r\n\r\n                    <Dialog open={this.state.dialogOpen} TransitionComponent={Transition} keepMounted onClose={this.handleClose}\r\n                            aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\" >\r\n                        <DialogTitle id=\"alert-dialog-slide-title\">{\"Create New Formation\"}</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                This is the dot's information\r\n                            </DialogContentText>\r\n                            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Dance Name\" type=\"dance name\"\r\n                                       value={this.state.danceName} onChange={this.onDancerNameChange} fullWidth/>\r\n\r\n                            {/*Add more options*/}\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </div>\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dot;"]},"metadata":{},"sourceType":"module"}