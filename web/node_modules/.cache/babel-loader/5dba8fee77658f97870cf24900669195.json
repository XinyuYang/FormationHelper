{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar Button_1 = require(\"@material-ui/core/Button\");\n\nvar styles_1 = require(\"@material-ui/core/styles\");\n\nvar classnames_1 = require(\"classnames\");\n\nvar core_1 = require(\"./core\");\n\nvar styles = function (theme) {\n  return styles_1.createStyles({\n    root: {\n      minWidth: 16\n    },\n    rootCurrent: {\n      paddingLeft: theme.spacing.unit * 1.5,\n      paddingRight: theme.spacing.unit * 1.5\n    },\n    rootEllipsis: {\n      paddingLeft: theme.spacing.unit * 0.5,\n      paddingRight: theme.spacing.unit * 0.5\n    },\n    rootEnd: {\n      paddingLeft: theme.spacing.unit * 1.5,\n      paddingRight: theme.spacing.unit * 1.5\n    },\n    rootStandard: {\n      paddingLeft: theme.spacing.unit * 1.5,\n      paddingRight: theme.spacing.unit * 1.5\n    },\n    label: {},\n    text: {},\n    textPrimary: {},\n    textSecondary: {},\n    colorInherit: {},\n    colorInheritCurrent: {},\n    colorInheritOther: {},\n    disabled: {},\n    sizeSmall: {\n      minWidth: 8\n    },\n    sizeSmallCurrent: {\n      paddingLeft: theme.spacing.unit,\n      paddingRight: theme.spacing.unit\n    },\n    sizeSmallEllipsis: {\n      paddingLeft: theme.spacing.unit * 0.25,\n      paddingRight: theme.spacing.unit * 0.25\n    },\n    sizeSmallEnd: {\n      paddingLeft: theme.spacing.unit,\n      paddingRight: theme.spacing.unit\n    },\n    sizeSmallStandard: {\n      paddingLeft: theme.spacing.unit,\n      paddingRight: theme.spacing.unit\n    },\n    sizeLarge: {\n      minWidth: 24\n    },\n    sizeLargeCurrent: {\n      paddingLeft: theme.spacing.unit * 2,\n      paddingRight: theme.spacing.unit * 2\n    },\n    sizeLargeEllipsis: {\n      paddingLeft: theme.spacing.unit * 0.75,\n      paddingRight: theme.spacing.unit * 0.75\n    },\n    sizeLargeEnd: {\n      paddingLeft: theme.spacing.unit * 2,\n      paddingRight: theme.spacing.unit * 2\n    },\n    sizeLargeStandard: {\n      paddingLeft: theme.spacing.unit * 2,\n      paddingRight: theme.spacing.unit * 2\n    },\n    fullWidth: {}\n  });\n};\n\nvar handleClick = function (page, limit, onClick) {\n  return function (ev) {\n    onClick(ev, core_1.getOffset(page, limit), page);\n  };\n};\n\nvar PageButton = function (props) {\n  var _a, _b, _c, _d;\n\n  var limit = props.limit,\n      page = props.page,\n      total = props.total,\n      pageVariant = props.pageVariant,\n      classesProp = props.classes,\n      currentPageColor = props.currentPageColor,\n      disabledProp = props.disabled,\n      disableRippleProp = props.disableRipple,\n      onClickProp = props.onClick,\n      otherPageColor = props.otherPageColor,\n      size = props.size,\n      other = __rest(props, [\"limit\", \"page\", \"total\", \"pageVariant\", \"classes\", \"currentPageColor\", \"disabled\", \"disableRipple\", \"onClick\", \"otherPageColor\", \"size\"]);\n\n  var isCurrent = pageVariant === 'current';\n  var isEllipsis = pageVariant === 'ellipsis';\n  var isEnd = pageVariant === 'end';\n  var isStandard = pageVariant === 'standard';\n  var isSmall = size === 'small';\n  var isLarge = size === 'large';\n\n  var rootCurrent = classesProp.rootCurrent,\n      rootEllipsis = classesProp.rootEllipsis,\n      rootEnd = classesProp.rootEnd,\n      rootStandard = classesProp.rootStandard,\n      colorInheritCurrent = classesProp.colorInheritCurrent,\n      colorInheritOther = classesProp.colorInheritOther,\n      sizeSmallCurrent = classesProp.sizeSmallCurrent,\n      sizeSmallEllipsis = classesProp.sizeSmallEllipsis,\n      sizeSmallEnd = classesProp.sizeSmallEnd,\n      sizeSmallStandard = classesProp.sizeSmallStandard,\n      sizeLargeCurrent = classesProp.sizeLargeCurrent,\n      sizeLargeEllipsis = classesProp.sizeLargeEllipsis,\n      sizeLargeEnd = classesProp.sizeLargeEnd,\n      sizeLargeStandard = classesProp.sizeLargeStandard,\n      classes = __rest(classesProp, [\"rootCurrent\", \"rootEllipsis\", \"rootEnd\", \"rootStandard\", \"colorInheritCurrent\", \"colorInheritOther\", \"sizeSmallCurrent\", \"sizeSmallEllipsis\", \"sizeSmallEnd\", \"sizeSmallStandard\", \"sizeLargeCurrent\", \"sizeLargeEllipsis\", \"sizeLargeEnd\", \"sizeLargeStandard\"]);\n\n  classes.root = classnames_1.default(classes.root, (_a = {}, _a[rootCurrent] = isCurrent, _a[rootEllipsis] = isEllipsis, _a[rootEnd] = isEnd, _a[rootStandard] = isStandard, _a));\n  classes.colorInherit = classnames_1.default(classes.colorInherit, (_b = {}, _b[colorInheritCurrent] = isCurrent, _b[colorInheritOther] = !isCurrent, _b));\n  classes.sizeSmall = classnames_1.default(classes.sizeSmall, (_c = {}, _c[sizeSmallCurrent] = isCurrent && isSmall, _c[sizeSmallEllipsis] = isEllipsis && isSmall, _c[sizeSmallEnd] = isEnd && isSmall, _c[sizeSmallStandard] = isStandard && isSmall, _c));\n  classes.sizeLarge = classnames_1.default(classes.sizeLarge, (_d = {}, _d[sizeLargeCurrent] = isCurrent && isLarge, _d[sizeLargeEllipsis] = isEllipsis && isLarge, _d[sizeLargeEnd] = isEnd && isLarge, _d[sizeLargeStandard] = isStandard && isLarge, _d));\n  var color = isCurrent ? currentPageColor : otherPageColor;\n  var disabled = disabledProp || isEllipsis || page <= 0 || total <= 0;\n  var disableRipple = disableRippleProp || disabled || isCurrent;\n  var onClick;\n\n  if (onClickProp && !disabled && (isEnd || isStandard)) {\n    onClick = handleClick(page, limit, onClickProp);\n  }\n\n  return React.createElement(Button_1.default, __assign({\n    classes: classes,\n    color: color,\n    disabled: disabled,\n    disableRipple: disableRipple,\n    onClick: onClick,\n    size: size\n  }, other));\n};\n\nPageButton.defaultProps = {\n  limit: 1,\n  page: 0,\n  total: 0,\n  pageVariant: 'standard',\n  disabled: false,\n  disableRipple: false\n};\nvar PageButtonWithStyles = styles_1.withStyles(styles, {\n  name: 'MuiFlatPageButton'\n})(PageButton);\nexports.default = PageButtonWithStyles;","map":null,"metadata":{},"sourceType":"script"}