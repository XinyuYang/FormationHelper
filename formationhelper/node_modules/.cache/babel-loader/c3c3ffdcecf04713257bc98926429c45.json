{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport HiddenJs from './HiddenJs';\nimport HiddenCss from './HiddenCss';\n/**\r\n * Responsively hides children based on the selected implementation.\r\n */\n\nfunction Hidden(props) {\n  var implementation = props.implementation,\n      other = _objectWithoutProperties(props, [\"implementation\"]);\n\n  if (implementation === 'js') {\n    return React.createElement(HiddenJs, other);\n  }\n\n  return React.createElement(HiddenCss, other);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Hidden.propTypes = {\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Specify which implementation to use.  'js' is the default, 'css' works better for\r\n   * server-side rendering.\r\n   */\n  implementation: PropTypes.oneOf(['js', 'css']),\n\n  /**\r\n   * You can use this property when choosing the `js` implementation with server-side rendering.\r\n   *\r\n   * As `window.innerWidth` is unavailable on the server,\r\n   * we default to rendering an empty component during the first mount.\r\n   * You might want to use an heuristic to approximate\r\n   * the screen width of the client browser screen width.\r\n   *\r\n   * For instance, you could be using the user-agent or the client-hints.\r\n   * https://caniuse.com/#search=client%20hint\r\n   */\n  initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n\n  /**\r\n   * If true, screens this size and down will be hidden.\r\n   */\n  lgDown: PropTypes.bool,\n\n  /**\r\n   * If true, screens this size and up will be hidden.\r\n   */\n  lgUp: PropTypes.bool,\n\n  /**\r\n   * If true, screens this size and down will be hidden.\r\n   */\n  mdDown: PropTypes.bool,\n\n  /**\r\n   * If true, screens this size and up will be hidden.\r\n   */\n  mdUp: PropTypes.bool,\n\n  /**\r\n   * Hide the given breakpoint(s).\r\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n\n  /**\r\n   * If true, screens this size and down will be hidden.\r\n   */\n  smDown: PropTypes.bool,\n\n  /**\r\n   * If true, screens this size and up will be hidden.\r\n   */\n  smUp: PropTypes.bool,\n\n  /**\r\n   * If true, screens this size and down will be hidden.\r\n   */\n  xlDown: PropTypes.bool,\n\n  /**\r\n   * If true, screens this size and up will be hidden.\r\n   */\n  xlUp: PropTypes.bool,\n\n  /**\r\n   * If true, screens this size and down will be hidden.\r\n   */\n  xsDown: PropTypes.bool,\n\n  /**\r\n   * If true, screens this size and up will be hidden.\r\n   */\n  xsUp: PropTypes.bool\n} : void 0;\nHidden.defaultProps = {\n  implementation: 'js',\n  lgDown: false,\n  lgUp: false,\n  mdDown: false,\n  mdUp: false,\n  smDown: false,\n  smUp: false,\n  xlDown: false,\n  xlUp: false,\n  xsDown: false,\n  xsUp: false\n};\nexport default Hidden;","map":null,"metadata":{},"sourceType":"module"}