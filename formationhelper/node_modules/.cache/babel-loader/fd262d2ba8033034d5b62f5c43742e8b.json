{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar styles_1 = require(\"@material-ui/core/styles\");\n\nvar classnames_1 = require(\"classnames\");\n\nvar PageButton_1 = require(\"./PageButton\");\n\nvar core_1 = require(\"./core\");\n\nvar styles = styles_1.createStyles({\n  root: {},\n  rootCurrent: {},\n  rootEllipsis: {},\n  rootEnd: {},\n  rootStandard: {},\n  label: {},\n  text: {},\n  textPrimary: {},\n  textSecondary: {},\n  colorInherit: {},\n  colorInheritCurrent: {},\n  colorInheritOther: {},\n  disabled: {},\n  sizeSmall: {},\n  sizeSmallCurrent: {},\n  sizeSmallEllipsis: {},\n  sizeSmallEnd: {},\n  sizeSmallStandard: {},\n  sizeLarge: {},\n  sizeLargeCurrent: {},\n  sizeLargeEllipsis: {},\n  sizeLargeEnd: {},\n  sizeLargeStandard: {},\n  fullWidth: {}\n});\n\nvar Pagination = function (props) {\n  var limit = props.limit,\n      offset = props.offset,\n      total = props.total,\n      centerRipple = props.centerRipple,\n      classes = props.classes,\n      classNameProp = props.className,\n      component = props.component,\n      currentPageColor = props.currentPageColor,\n      disabled = props.disabled,\n      disableFocusRipple = props.disableFocusRipple,\n      disableRipple = props.disableRipple,\n      fullWidth = props.fullWidth,\n      nextPageLabel = props.nextPageLabel,\n      innerButtonCountProp = props.innerButtonCount,\n      onClick = props.onClick,\n      otherPageColor = props.otherPageColor,\n      outerButtonCountProp = props.outerButtonCount,\n      previousPageLabel = props.previousPageLabel,\n      reduced = props.reduced,\n      size = props.size,\n      other = __rest(props, [\"limit\", \"offset\", \"total\", \"centerRipple\", \"classes\", \"className\", \"component\", \"currentPageColor\", \"disabled\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"nextPageLabel\", \"innerButtonCount\", \"onClick\", \"otherPageColor\", \"outerButtonCount\", \"previousPageLabel\", \"reduced\", \"size\"]);\n\n  var root = classes.root,\n      buttonClasses = __rest(classes, [\"root\"]);\n\n  var className = classnames_1.default(root, classNameProp);\n  var innerButtonCount = reduced ? 1 : innerButtonCountProp;\n  var outerButtonCount = reduced ? 1 : outerButtonCountProp;\n  var Component = component;\n  return React.createElement(Component, __assign({\n    className: className\n  }, other), core_1.computePages(limit, offset, total, innerButtonCount, outerButtonCount).map(function (pp) {\n    var key;\n    var children;\n    var pageVariant;\n\n    switch (pp.position) {\n      case 0:\n        key = pp.position;\n        children = pp.page;\n        pageVariant = 'current';\n        break;\n\n      case 1:\n      case 2:\n        key = -pp.position;\n        children = '...';\n        pageVariant = 'ellipsis';\n        break;\n\n      case 3:\n      case 4:\n        key = -pp.position;\n        children = pp.position === 3 ? previousPageLabel : nextPageLabel;\n        pageVariant = 'end';\n        break;\n\n      default:\n        key = pp.page;\n        children = pp.page;\n        pageVariant = 'standard';\n        break;\n    }\n\n    return React.createElement(PageButton_1.default, {\n      limit: limit,\n      page: pp.page,\n      total: total,\n      centerRipple: centerRipple,\n      classes: buttonClasses,\n      currentPageColor: currentPageColor,\n      disabled: disabled,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      key: key,\n      onClick: onClick,\n      otherPageColor: otherPageColor,\n      pageVariant: pageVariant,\n      size: size\n    }, children);\n  }));\n};\n\nPagination.defaultProps = {\n  limit: 1,\n  offset: 0,\n  total: 0,\n  centerRipple: false,\n  component: 'div',\n  currentPageColor: 'secondary',\n  disabled: false,\n  disableFocusRipple: false,\n  disableRipple: false,\n  fullWidth: false,\n  innerButtonCount: 2,\n  nextPageLabel: '>',\n  otherPageColor: 'primary',\n  outerButtonCount: 2,\n  previousPageLabel: '<',\n  reduced: false,\n  size: 'medium'\n};\nvar PaginationWithStyles = styles_1.withStyles(styles, {\n  name: 'MuiFlatPagination'\n})(Pagination);\nexports.default = PaginationWithStyles;","map":null,"metadata":{},"sourceType":"script"}