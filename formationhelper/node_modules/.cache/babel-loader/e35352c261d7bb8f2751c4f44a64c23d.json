{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheny\\\\WebstormProjects\\\\FormationHelper\\\\formationhelper\\\\src\\\\Pages\\\\Components\\\\MusicPlayer\\\\Player.js\";\nimport React, { Component } from 'react';\nimport Info from \"./Info\";\nimport Progress from \"./Progress\";\nimport Controls from \"./Controls\";\nimport LoadMusic from \"./LoadMusic\";\nimport { getAudioBuffer, getContext } from './Utils';\nimport { Box, Paper } from '@material-ui/core';\nimport Wave from \"./Wave\";\nexport default class Player extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      audio: null,\n      buffer: null,\n      context: null,\n      musicName: null,\n      musicPath: null,\n      MusicLength: 0,\n      duration: 0\n    };\n\n    this.handleFile = async event => {\n      const files = event.target.files;\n      const file = window.URL.createObjectURL(files[0]);\n      this.getFile(file);\n      const audio = new Audio(file);\n      this.setState({\n        musicPath: file\n      });\n      console.log(file);\n      this.setState({\n        audio\n      });\n      const musicName = files[0]['name'];\n      await this.setState({\n        musicName\n      });\n      console.log(files[0]['name']);\n    };\n\n    this.getFile = async (path = 'audio/test.mp3') => {\n      const buffer = await getAudioBuffer(path, this.state.context);\n      this.setState({\n        buffer\n      });\n      const duration = buffer['duration'];\n      this.setState({\n        duration\n      });\n      console.log(buffer);\n    };\n\n    this.onMusicProgress = () => {// Implement this\n    };\n  }\n\n  componentWillMount() {\n    const context = getContext();\n    this.setState({\n      context\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Info, {\n      className: \"info\",\n      musicName: this.state.musicName,\n      artist: this.state.artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      buffer: this.state.buffer,\n      duraiton: this.state.duration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Controls, {\n      audio: this.state.audio,\n      onMusicProgress: this.onMusicProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(LoadMusic, {\n      className: \"loadMusic\",\n      onChange: this.handleFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\cheny\\WebstormProjects\\FormationHelper\\formationhelper\\src\\Pages\\Components\\MusicPlayer\\Player.js"],"names":["React","Component","Info","Progress","Controls","LoadMusic","getAudioBuffer","getContext","Box","Paper","Wave","Player","state","audio","buffer","context","musicName","musicPath","MusicLength","duration","handleFile","event","files","target","file","window","URL","createObjectURL","getFile","Audio","setState","console","log","path","onMusicProgress","componentWillMount","render","artist"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Info from \"./Info\";\r\nimport Progress from \"./Progress\";\r\nimport Controls from \"./Controls\";\r\nimport LoadMusic from \"./LoadMusic\";\r\nimport { getAudioBuffer, getContext } from './Utils';\r\nimport {Box, Paper} from '@material-ui/core';\r\nimport Wave from \"./Wave\";\r\n\r\nexport default class Player extends Component{\r\n    state = {\r\n        audio: null,\r\n        buffer: null,\r\n        context: null,\r\n        musicName: null,\r\n        musicPath: null,\r\n        MusicLength: 0,\r\n        duration: 0,\r\n    };\r\n\r\n\r\n    componentWillMount() {\r\n        const context = getContext();\r\n        this.setState({\r\n            context\r\n        });\r\n    }\r\n\r\n    handleFile = async event =>{\r\n        const files = event.target.files;\r\n        const file = window.URL.createObjectURL(files[0]);\r\n        this.getFile(file);\r\n        const audio = new Audio(file);\r\n        this.setState({musicPath: file});\r\n        console.log(file);\r\n        this.setState({audio});\r\n        const musicName = files[0]['name'];\r\n        await this.setState({musicName});\r\n        console.log(files[0]['name']);\r\n\r\n    };\r\n\r\n    getFile = async (path = 'audio/test.mp3') => {\r\n        const buffer = await getAudioBuffer(path, this.state.context);\r\n        this.setState({ buffer });\r\n        const duration = buffer['duration'];\r\n        this.setState({duration});\r\n        console.log(buffer);\r\n    };\r\n\r\n\r\n    onMusicProgress = ()=>{\r\n        // Implement this\r\n\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className =\"player\">\r\n                <Info className = \"info\"\r\n                    musicName={this.state.musicName}\r\n                    artist={this.state.artist}\r\n                />\r\n                <div className = \"progress\">\r\n                    {/*<Wave audio={this.state.musicPath} />*/}\r\n                    <Progress buffer={this.state.buffer} duraiton={this.state.duration} />\r\n                </div>\r\n                <div className = \"controls\">\r\n                    <Controls  audio={this.state.audio} onMusicProgress={this.onMusicProgress}/>\r\n                    {/*<Time />*/}\r\n                    <LoadMusic className = \"loadMusic\" onChange={this.handleFile}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}