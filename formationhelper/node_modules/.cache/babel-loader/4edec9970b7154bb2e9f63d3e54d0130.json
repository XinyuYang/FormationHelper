{"ast":null,"code":"import _objectSpread from \"/Users/xinyuyang/Desktop/FormationHelper/formationhelper/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/xinyuyang/Desktop/FormationHelper/formationhelper/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/xinyuyang/Desktop/FormationHelper/formationhelper/src/Pages/Components/SideBar.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Fab from '@material-ui/core/Fab';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar'; // const useStyles = makeStyles({\n//   sideList: {\n//     width: 250,\n//   },\n// });\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  sideList: {\n    width: 250\n  }\n}));\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    left: false,\n    right: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const currentList = {\n    'left': ['Show/Hide Music', 'Show/Hide Pages', 'Change Dance Name', 'Change Dancer Number'],\n    'right': ['Default Formation', 'Copy previous formation', 'Change dots information', 'Settings']\n  };\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      [side]: open\n    }));\n  };\n\n  const sideList = side => React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawer(side, false),\n    onKeyDown: toggleDrawer(side, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, currentList[side].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))));\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"Menu\",\n    onClick: toggleDrawer('left', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Button, {\n    color: \"inherit\",\n    onClick: toggleDrawer('right', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Drawer, {\n    open: state.left,\n    onClose: toggleDrawer('left', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, sideList('left')), React.createElement(Drawer, {\n    anchor: \"right\",\n    open: state.right,\n    onClose: toggleDrawer('right', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, sideList('right')))));\n}","map":{"version":3,"sources":["/Users/xinyuyang/Desktop/FormationHelper/formationhelper/src/Pages/Components/SideBar.js"],"names":["React","makeStyles","Drawer","Fab","List","ListItem","ListItemText","AppBar","Toolbar","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","sideList","width","TemporaryDrawer","classes","useState","left","right","state","setState","currentList","toggleDrawer","side","open","event","type","key","list","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Fab from '@material-ui/core/Fab';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// const useStyles = makeStyles({\n//   sideList: {\n//     width: 250,\n//   },\n// });\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n      flexGrow: 1,\n  },\n  menuButton: {\n      marginRight: theme.spacing(2),\n  },\n  title: {\n      flexGrow: 1,\n  },\n  sideList: {\n    width: 250,\n  },\n}));\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n    right: false,\n  });\n  const currentList = {'left':['Show/Hide Music','Show/Hide Pages', 'Change Dance Name', 'Change Dancer Number'], \n                       'right':['Default Formation', 'Copy previous formation', 'Change dots information',\n                                'Settings']};\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        {currentList[side].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text}/>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n                <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\"\n                onClick={toggleDrawer('left', true)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <Button color=\"inherit\" onClick={toggleDrawer('right', true)}>Login</Button>\n                  <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n        {sideList('left')}</Drawer>\n        <Drawer anchor=\"right\" open={state.right} onClose={toggleDrawer('right', false)}>\n        {sideList('right')}</Drawer>\n                </Toolbar>\n      </AppBar>\n\n    \n    \n        {/* <Fab onClick={toggleDrawer('left', true)}>L</Fab>\n        <Fab onClick={toggleDrawer('right', true)}>R</Fab>\n        <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n        {sideList('left')}</Drawer>\n        <Drawer anchor=\"right\" open={state.right} onClose={toggleDrawer('right', false)}>\n        {sideList('right')}</Drawer> */}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}