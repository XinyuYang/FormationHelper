{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Position = require('./Position');\n\nvar _Position2 = _interopRequireDefault(_Position);\n\nvar _Waveform = require('./Waveform');\n\nvar _Waveform2 = _interopRequireDefault(_Waveform);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Wrapper = function (_React$Component) {\n  _inherits(Wrapper, _React$Component);\n\n  function Wrapper() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Wrapper);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Wrapper.__proto__ || Object.getPrototypeOf(Wrapper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      dragging: false,\n      height: _this.props.height,\n      resizing: null,\n      width: _this.props.width\n    }, _this.getDimensions = function () {\n      clearTimeout(_this.state.resizing);\n      var resizing = setTimeout(function () {\n        var height = _this.getHeight(_this.props, _this.wrapper);\n\n        var width = _this.getWidth(_this.props, _this.wrapper);\n\n        if (height !== _this.state.height || width !== _this.state.width) {\n          _this.setState({\n            height: height,\n            width: width\n          });\n        }\n      }, 200);\n\n      _this.setState({\n        resizing: resizing\n      });\n    }, _this.getMousePosition = function (e) {\n      var x = e.nativeEvent.offsetX;\n\n      if (e.nativeEvent.target.id === 'posMarker') {\n        return x + _this.props.position * _this.wrapper.offsetWidth;\n      }\n\n      return x;\n    }, _this.handleMouseDown = function (e) {\n      _this.setState({\n        dragging: true\n      });\n\n      if (_this.props.onPositionChange) {\n        _this.props.onPositionChange(_this.getMousePosition(e) / _this.wrapper.offsetWidth);\n      }\n    }, _this.handleMouseMove = function (e) {\n      if (_this.state.dragging && _this.props.onPositionChange) {\n        _this.props.onPositionChange(_this.getMousePosition(e) / _this.wrapper.offsetWidth);\n      }\n    }, _this.handleMouseUp = function (e) {\n      _this.setState({\n        dragging: false\n      });\n\n      if (_this.props.onPositionChange) {\n        _this.props.onPositionChange(_this.getMousePosition(e) / _this.wrapper.offsetWidth);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Wrapper, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.responsive) {\n        window.addEventListener('resize', this.getDimensions, false);\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(next) {\n      if (next.height !== this.props.height || next.width !== this.props.width || !next.height || !next.width) {\n        var height = this.getHeight(next, this.wrapper);\n        var width = this.getWidth(next, this.wrapper);\n        this.setState({\n          height: height,\n          width: width\n        }, this.getDimensions);\n      }\n\n      if (next.responsive !== this.props.responsive) {\n        if (next.responsive) {\n          window.addEventListener('resize', this.getDimensions, false);\n        } else {\n          window.removeEventListener('resize', this.getDimensions);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.getDimensions);\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(props, wrapper) {\n      return props.responsive ? wrapper.offsetHeight : props.height;\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(props, wrapper) {\n      return props.responsive ? wrapper.offsetWidth : props.width;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          buffer = _props.buffer,\n          markerStyle = _props.markerStyle,\n          position = _props.position,\n          responsive = _props.responsive,\n          showPosition = _props.showPosition,\n          waveStyle = _props.waveStyle;\n      return _react2.default.createElement('div', {\n        onMouseDown: this.handleMouseDown,\n        onMouseMove: this.handleMouseMove,\n        onMouseUp: this.handleMouseUp,\n        ref: function ref(wrapper) {\n          return _this2.wrapper = wrapper;\n        },\n        style: {\n          height: responsive ? '100%' : this.props.height + 'px',\n          position: 'relative',\n          width: responsive ? '100%' : this.props.width + 'px'\n        }\n      }, _react2.default.createElement(_Waveform2.default, {\n        buffer: buffer,\n        height: this.state.height,\n        waveStyle: waveStyle,\n        width: this.state.width\n      }), showPosition && buffer && _react2.default.createElement(_Position2.default, {\n        id: 'posMarker',\n        markerStyle: markerStyle,\n        position: position\n      }));\n    }\n  }]);\n\n  return Wrapper;\n}(_react2.default.Component);\n\nWrapper.propTypes = {\n  buffer: _propTypes2.default.object,\n  height: _propTypes2.default.number,\n  markerStyle: _propTypes2.default.shape({\n    color: _propTypes2.default.string,\n    width: _propTypes2.default.number\n  }),\n  onPositionChange: _propTypes2.default.func,\n  position: _propTypes2.default.number,\n  responsive: _propTypes2.default.bool,\n  showPosition: _propTypes2.default.bool,\n  waveStyle: _propTypes2.default.shape({\n    animate: _propTypes2.default.bool,\n    color: _propTypes2.default.string,\n    pointWidth: _propTypes2.default.number\n  }),\n  width: _propTypes2.default.number\n};\nexports.default = Wrapper;","map":null,"metadata":{},"sourceType":"script"}